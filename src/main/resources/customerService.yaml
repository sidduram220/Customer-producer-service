openapi: 3.0.0
info:
  description: "API Documentation  for customer"
  version: "0.0.1"
  title: "API Documentation"
tags:
- name: "customer"
  description: "About Customer"
          
paths:
  /customer/v1/produce:
    post:
      summary: Api to publish customer details through kafka.
      parameters: 
       - in: header
         name: Transaction-Id
         required: true
         schema:
            type: string
       - in: header
         name: Activity-Id
         required: true
         schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer'
      responses:
        200:
          description: Ok
          content:
           application/json:
             schema:
               $ref: "#/components/schemas/customerResponse"
        401:
          description: Unauthorized
          content:
           application/json:
             schema:
              properties:
                error :
                 type: string
                error_description :
                 type: string
               
        403:
          description: Can not authorise the request
        400:
          description: Bad request
        404:
          description: Not found
        500:
          description: Internal server error
        504:
          description: Service unavailable
        
               

security:
  - OAuth2:
      - read
      - write

components :
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:8080/oauth/authorize
          tokenUrl: http://localhost:8080/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
  schemas:
   customerResponse:
    type: "object"
    properties:
      status:
       type: "string"
      message:
       type : "string"
      errorType :
       type : "string"
   address :
    type: "object"
    required: 
    - "addressLine1"
    - "postalCode"
    properties:
      addressLine1:
        type: "string"
        maxLength: 50
      addressLine2:
        type: "string"
      street:
        type: "string"
        maxLength: 50
      postalCode:
        type: "integer"
        maxLength: 5
   customer:
    type: "object"
    required:
    - "customerNumber"
    - "firstName"
    - "lastName"
    - "birthDate"
    - "country"
    - "countryCode"
    - "mobileNumber"
    - "email"
    - "customerStatus"
    - "address"
    properties:
      customerNumber:
        type: "string"
        maxLength: 10
      firstName:
        type: "string"
        minLength: 10
        maxLength: 50
      lastName:
        type: "string"
        minLength: 10
        maxLength: 50
      birthDate:
        type: "string"
        format: "date"
      country:
        type: "string"
      countryCode:
        type: "string"
        maxLength: 2
      mobileNumber:
        type: "string"
        maxLength: 10
      email:
        type: "string"
        maxLength: 50
      customerStatus:
        type: "string"
        description: "customer status"
        enum:
        - "Open"
        - "Close"
        - "Suspended"
        - "Restored"
      address:
        $ref: "#/components/schemas/address"